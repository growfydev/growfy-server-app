generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum CoreRole {
    ADMIN
    USER
}

enum TeamRole {
    TEAM_OWNER
    TEAM_MEMBER
    ANALYST
    EDITOR
    MANAGER
    CONTENT_CREATOR
    CLIENT
    GUEST
}

model User {
    id             Int       @id @default(autoincrement())
    name           String
    email          String    @unique
    password       String
    phone          String?
    role           CoreRole? @default(USER)
    otpEnabled     Boolean   @default(false)
    otpVerified    Boolean   @default(false)
    otpSecret      String?
    otpAuthURI     String?
    createdAt      DateTime  @default(now())
    updatedAt      DateTime? @updatedAt
    profiles       Profile[]
    members        Member[]  @relation("UserMembers")
    relatedMembers Member[]  @relation("RelatedMembers")
}

model Profile {
    id      Int      @id @default(autoincrement())
    name    String
    userId  Int?
    user    User?    @relation(fields: [userId], references: [id])
    socials Social[]
}

model Social {
    id         Int      @id @default(autoincrement())
    token      String
    providerId Int
    profileId  Int
    provider   Provider @relation(fields: [providerId], references: [id])
    profile    Profile  @relation(fields: [profileId], references: [id])
}

model Provider {
    id      Int      @id @default(autoincrement())
    name    String
    socials Social[]
}

model Post {
    id         Int       @id @default(autoincrement())
    status     String?
    body       String?
    postTypeId Int?
    taskId     Int?
    postType   PostType? @relation(fields: [postTypeId], references: [id])
    task       Task?     @relation(fields: [taskId], references: [id])
}

model Task {
    id     Int    @id @default(autoincrement())
    status String
    posts  Post[]
}

model PostType {
    id    Int    @id @default(autoincrement())
    name  String
    posts Post[]
}

model Member {
    id            Int  @id @default(autoincrement())
    userId        Int
    relatedUserId Int
    user          User @relation("UserMembers", fields: [userId], references: [id])
    relatedUser   User @relation("RelatedMembers", fields: [relatedUserId], references: [id])
}
